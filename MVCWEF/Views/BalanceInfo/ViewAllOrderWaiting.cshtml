@using MVCWEF.Models;
@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<Order>


@{
    Layout = null;

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <table class="table">
        <thead>
            <tr class="success">
                <th>
                    UserID
                </th>
                <th>
                    OrderDate
                </th>
                <th>
                   PaymentType
                </th>
                <th>
                   StatusID
                </th>
                <th>
                    CustomerPhone
                </th>
                <th>
                    CustomerAddress
                </th>

            </tr>
        </thead>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StatusID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerPhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerAddress)
                </td>

                <td>

                    @Html.ActionLink("Details", "Details", new { id = item.OrderId })

                </td>
            </tr>
        }

    </table>

<div class="clear"></div>
    @if (@Model.PageCount > 1)
    {
<span> page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) /@Model.PageCount </span>
<div class="div-pagination">
    @Html.PagedListPager(Model, page => Url.Action("IndexWaitingOrder", new { page = page }))
</div>
    }
</body>
</html>